JaCoCo Code Coverage


SonarQube  --> static code anaylser

Code QTY(Code smell)    


TDD(Test Driven) Cycle




Unit testing , Integration testing , load testing



Code coverage


Junit 5  Test case(Jupiter test case)


package com.productapp.demo.calapp;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

class CalculatorTest {

	private Calculator calculator;
	
	@BeforeEach
	public void beforeTest() {
		calculator=new Calculator();
	}
	
	@Test
	public void addTest() {
		
		int sum=calculator.add(1, 2);
		Assertions.assertEquals(3, sum);
		
	
		
	}

	public void addMultply() {
		
		int mul=calculator.mul(1, 2);
		Assertions.assertEquals(3, mul);
		
		
	}
	
	@AfterEach
	public void afterEachTest() {
		calculator =null;
	}

}







package com.productapp.demo.cityapp;

import static org.junit.jupiter.api.Assertions.*;

import java.time.Duration;

import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

class CityApiTest {
	
	private CityApi api;

	@BeforeEach
	void setUp() throws Exception {
		api=new CityApi();
	}

	@AfterEach
	void tearDown() throws Exception {
		api=null;
	}

	@Test
	void testGetCity() {
		Assertions.assertTimeout(Duration.ofMillis(2500), ()->api.getCity(33));
	}

}


Annotation:
@Test
@AfterEach
@BeforeEach
@Tag



Mockito  --> Used for mock testing the junit

@ExtendWith(MockitoExtension.class)

@Mock

@InjectMocks



